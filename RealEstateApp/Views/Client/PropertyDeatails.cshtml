@using RealEstateApp.Core.Application.ViewModels.Property
@using RealEstateApp.Core.Application.Helpers
@using RealEstateApp.Core.Application.Dtos.Account

@inject IHttpContextAccessor httpContextAccesor
@model PropertyVm
@{
    ViewData["Title"] = "Detalles de Propiedad | PropHub";
    var user = httpContextAccesor.HttpContext.Session.Get<AuthenticationResponse>("user");
}

<div class="container py-4">
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Client" asp-action="Index">Inicio</a></li>
            <li class="breadcrumb-item active" aria-current="page">Detalles de propiedad</li>
        </ol>
    </nav>

    <div class="row">
        <!-- Slider de imágenes -->
        <div class="col-md-8">
            <div class="card shadow-sm mb-4 overflow-hidden">
                <div id="propertyCarousel" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        @if (Model.PropertyImageVms != null && Model.PropertyImageVms.Any())
                        {
                            @for (int i = 0; i < Model.PropertyImageVms.Count; i++)
                            {
                                var img = Model.PropertyImageVms.ElementAt(i);
                                <div class="carousel-item @(i == 0 ? "active" : "")">
                                    <img src="@img.ImageUrl" class="d-block w-100" style="height: 500px; object-fit: cover;" alt="Imagen de propiedad" />
                                </div>
                            }
                        }
                        else
                        {
                            <div class="carousel-item active">
                                <div class="bg-light d-flex justify-content-center align-items-center" style="height: 500px;">
                                    <i class="bi bi-image text-muted" style="font-size: 5rem;"></i>
                                </div>
                            </div>
                        }
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#propertyCarousel" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon"></span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#propertyCarousel" data-bs-slide="next">
                        <span class="carousel-control-next-icon"></span>
                    </button>

                    <!-- Indicadores de imágenes -->
                    @if (Model.PropertyImageVms != null && Model.PropertyImageVms.Count > 1)
                    {
                        <div class="carousel-indicators">
                            @for (int i = 0; i < Model.PropertyImageVms.Count; i++)
                            {
                                <button type="button" data-bs-target="#propertyCarousel" data-bs-slide-to="@i" class="@(i == 0 ? "active" : "")" aria-current="@(i == 0 ? "true" : "false")" aria-label="Slide @(i+1)"></button>
                            }
                        </div>
                    }
                </div>
            </div>

            <!-- Información de la propiedad -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="mb-0 fw-bold">@Model.PropertyTypeVm.Name</h3>
                        <span class="badge bg-primary px-3 py-2">@Model.SalesTypeVm.Name</span>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <p class="mb-2"><strong>Código:</strong> <span class="badge bg-secondary">@Model.Code</span></p>
                        </div>
                        <div class="col-md-6 text-md-end">
                            <h4 class="text-primary fw-bold">RD$ @Model.Price.ToString("N0")</h4>
                        </div>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-4 mb-3">
                            <div class="d-flex align-items-center">
                                <div class="bg-light rounded-circle p-3 me-3">
                                    <i class="bi bi-door-closed text-primary"></i>
                                </div>
                                <div>
                                    <p class="text-muted mb-0">Habitaciones</p>
                                    <h5 class="mb-0">@Model.AmountOfRoom</h5>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 mb-3">
                            <div class="d-flex align-items-center">
                                <div class="bg-light rounded-circle p-3 me-3">
                                    <i class="bi bi-droplet text-primary"></i>
                                </div>
                                <div>
                                    <p class="text-muted mb-0">Baños</p>
                                    <h5 class="mb-0">@Model.AmountOfBathroom</h5>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 mb-3">
                            <div class="d-flex align-items-center">
                                <div class="bg-light rounded-circle p-3 me-3">
                                    <i class="bi bi-rulers text-primary"></i>
                                </div>
                                <div>
                                    <p class="text-muted mb-0">Tamaño</p>
                                    <h5 class="mb-0">@Model.PropertySize m²</h5>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="mb-4">
                        <h5 class="fw-bold mb-3">Descripción</h5>
                        <p>@Model.Description</p>
                    </div>

                    <div>
                        <h5 class="fw-bold mb-3">Mejoras</h5>
                        @if (Model.PropertyImprovements != null && Model.PropertyImprovements.Any())
                        {
                            <div class="row">
                                @foreach (var improvement in Model.PropertyImprovements)
                                {
                                    <div class="col-md-6 mb-2">
                                        <div class="d-flex align-items-center">
                                            <i class="bi bi-check-circle-fill text-success me-2"></i>
                                            <span>@improvement.Improvement.Name</span>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <p class="text-muted">Esta propiedad no tiene mejoras registradas.</p>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Información del agente y acciones -->
        <div class="col-md-4">
            <!-- Información del agente -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white py-3">
                    <h5 class="mb-0 fw-bold">
                        <i class="bi bi-person-badge me-2"></i>
                        Agente Inmobiliario
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.Agent != null)
                    {
                        <div class="text-center mb-4">
                            <img src="@Model.Agent.Photo" class="rounded-circle border border-3 border-primary p-1" style="width: 120px; height: 120px; object-fit: cover;" alt="Foto del agente" />
                            <h5 class="mt-3 mb-1 fw-bold">@Model.Agent.FirstName @Model.Agent.LastName</h5>
                            <span class="badge bg-primary px-3 py-2">Agente Inmobiliario</span>
                        </div>
                        <div class="mb-3">
                            <div class="d-flex align-items-center mb-2">
                                <div class="bg-light rounded-circle p-2 me-3">
                                    <i class="bi bi-envelope text-primary"></i>
                                </div>
                                <div>
                                    <p class="text-muted mb-0">Email</p>
                                    <p class="mb-0">@Model.Agent.Email</p>
                                </div>
                            </div>
                        </div>
                        <div class="mb-4">
                            <div class="d-flex align-items-center">
                                <div class="bg-light rounded-circle p-2 me-3">
                                    <i class="bi bi-telephone text-primary"></i>
                                </div>
                                <div>
                                    <p class="text-muted mb-0">Teléfono</p>
                                    <p class="mb-0">@Model.Agent.Phone</p>
                                </div>
                            </div>
                        </div>
                        <a href="mailto:@Model.Agent.Email" class="btn btn-primary w-100 mb-2">
                            <i class="bi bi-envelope-fill me-2"></i>Contactar por Email
                        </a>
                       
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="bi bi-person-x display-4 text-muted"></i>
                            <p class="mt-3 text-muted">Información del agente no disponible</p>
                        </div>
                    }
                </div>
            </div>

            <!-- Acciones rápidas -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white py-3">
                    <h5 class="mb-0 fw-bold">
                        <i class="bi bi-lightning-charge me-2"></i>
                        Acciones rápidas
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.FavoritePropertyVms.Any(fp => fp.PropertyId == Model.Id))
                    {
                        <a asp-controller="Client" asp-action="ToggleFavoriteProperty" asp-route-id="@Model.Id" asp-route-clientId="@user.Id" class="btn btn-danger w-100 mb-2">
                            <i class="bi bi-heart-fill me-2"></i>Quitar de favoritos
                        </a>
                    }
                    else
                    {
                        <a asp-controller="Client" asp-action="ToggleFavoriteProperty" asp-route-id="@Model.Id" asp-route-clientId="@user.Id" class="btn btn-outline-danger w-100 mb-2">
                            <i class="bi bi-heart me-2"></i>Añadir a favoritos
                        </a>
                    }
                  
                    <a href="#" class="btn btn-outline-primary w-100" onclick="window.print(); return false;">
                        <i class="bi bi-printer me-2"></i>Imprimir detalles
                    </a>
                </div>
            </div>

            <!-- Ofertas -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0 fw-bold">
                            <i class="bi bi-cash-coin me-2"></i>Mis Ofertas
                        </h5>
                        <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#offerModal"
                        @(Model.Offers.Any(o => o.ClientId == user.Id && (o.State == "1" || o.State == "2")) ? "disabled" : "")>
                            <i class="bi bi-plus-lg me-1"></i> Nueva
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model.Offers.Any(o => o.ClientId == user.Id))
                    {
                        <div class="list-group">
                            @foreach (var offer in Model.Offers.Where(o => o.ClientId == user.Id).OrderByDescending(o => o.Date))
                            {
                                <div class="list-group-item list-group-item-action">
                                    <div class="d-flex w-100 justify-content-between align-items-center">
                                        <h6 class="mb-1">RD$ @offer.Amount.ToString("N0")</h6>
                                        <span class="badge @GetStatusBadge(offer.State)">@GetStatusText(offer.State)</span>
                                    </div>
                                    <small class="text-muted">@offer.Date.ToString("dd/MM/yyyy HH:mm")</small>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-3">
                            <i class="bi bi-cash-stack display-4 text-muted"></i>
                            <p class="mt-3 text-muted">No has realizado ofertas</p>
                            <button class="btn btn-primary mt-2" data-bs-toggle="modal" data-bs-target="#offerModal">
                                <i class="bi bi-plus-lg me-1"></i> Hacer una oferta
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Sección de Chat -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-white py-3">
                    <h5 class="mb-0 fw-bold">
                        <i class="bi bi-chat-dots me-2"></i>
                        Chat con el Agente
                    </h5>
                </div>
                <div class="card-body chat-container" style="height: 400px; overflow-y: auto;">
                    @{
                        int chatId = 0;
                    }

                    @if (Model.Chats != null && Model.Chats.Any())
                    {
                        var chat = Model.Chats.FirstOrDefault(c => c.ClientId == user.Id);
                        if (chat != null)
                        {
                            chatId = chat.Id;
                        }
                        if (chat?.Messages != null)
                        {
                            foreach (var message in chat.Messages.OrderBy(m => m.DateTime))
                            {
                                <div class="message @(message.SenderId == user.Id ? "client-message" : "agent-message") mb-3">
                                    <div class="message-header small text-muted">
                                        @(message.SenderId == user.Id ? "Tú" : Model.Agent.FirstName) -
                                        @message.DateTime.ToString("dd/MM/yyyy HH:mm")
                                    </div>
                                    <div class="message-content p-3 rounded @(message.SenderId == user.Id ? "bg-primary text-white" : "bg-light")">
                                        @message.Content
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="text-center py-5">
                                <i class="bi bi-chat display-4 text-muted"></i>
                                <p class="mt-3 text-muted">Inicia una conversación con el agente</p>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="bi bi-chat display-4 text-muted"></i>
                            <p class="mt-3 text-muted">Inicia una conversación con el agente</p>
                        </div>
                    }
                </div>
                <div class="card-footer bg-white">
                    <form asp-controller="Client" asp-action="SendMessage" method="post">
                        <input type="hidden" name="propertyId" value="@Model.Id" />
                        <input type="hidden" name="chatId" value="@chatId" />
                        <div class="input-group">
                            <input type="text" name="message" class="form-control" placeholder="Escribe tu mensaje..." required>
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-send-fill"></i>
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Oferta -->
    <div class="modal fade" id="offerModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Nueva Oferta</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form asp-controller="Client" asp-route-propertyId="@Model.Id" asp-route-clientId="@user.Id" asp-action="CreateOffer" method="post">
                    <input type="hidden" name="propertyId" value="@Model.Id" />
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label fw-medium">Monto de la oferta (RD$)</label>
                            <div class="input-group">
                                <span class="input-group-text">RD$</span>
                                <input type="number" class="form-control" name="amount" min="5000" step="1000" required>
                            </div>
                            <small class="text-muted">El precio actual de la propiedad es RD$ @Model.Price.ToString("N0")</small>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Enviar Oferta</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .client-message {
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        text-align: right;
    }

    .agent-message {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        text-align: left;
    }

    .message-content {
        max-width: 80%;
        word-wrap: break-word;
    }

    .client-message .message-content {
        border-radius: 15px 15px 0 15px;
    }

    .agent-message .message-content {
        border-radius: 15px 15px 15px 0;
    }
</style>

<script>
    // Inicializar carrusel
    document.addEventListener('DOMContentLoaded', function() {
        // Scroll automático al final del chat
        const chatContainer = document.querySelector('.chat-container');
        if(chatContainer) {
            chatContainer.scrollTop = chatContainer.scrollHeight;
        }

        // Función para compartir propiedad
        window.compartirPropiedad = function() {
            if (navigator.share) {
                navigator.share({
                    title: '@Model.PropertyTypeVm.Name',
                    text: 'Mira esta propiedad en PropHub: @Model.PropertyTypeVm.Name - RD$ @Model.Price.ToString("N0")',
                    url: window.location.href,
                })
                .catch(console.error);
            } else {
                alert('La funcionalidad de compartir no está disponible en este navegador');
            }
        };
    });
</script>

@functions {
    string GetStatusBadge(string status)
    {
        return status switch
        {
            "Pendiente" => "bg-warning",
            "Aceptada" => "bg-success",
            "Rechazada" => "bg-danger",
            _ => "bg-secondary"
        };
    }

    string GetStatusText(string state)
    {
        return state switch
        {
            "Pendiente" => "Pendiente",
            "Aceptada" => "Aceptada",
            "Rechazada" => "Rechazada",
            _ => "Desconocido"
        };
    }
}