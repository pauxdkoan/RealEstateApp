@using RealEstateApp.Core.Application.ViewModels.Property
@using RealEstateApp.Core.Application.Helpers
@using RealEstateApp.Core.Application.Dtos.Account
@model List<PropertyVm>

@inject IHttpContextAccessor httpContextAccesor
@{
    ViewData["Title"] = "Home";
    var user = httpContextAccesor.HttpContext.Session.Get<AuthenticationResponse>("user");

}

<div class="container py-5">
    <h2 class="mb-5 text-center fw-bold">Mis Propiedades Publicadas</h2>

    <!-- Filtros de búsqueda -->
    <div class="row justify-content-center mb-5">
        <div class="col-lg-10">
            <div class="row g-3">
                <div class="col-md-3">
                    <input type="text" class="form-control search-input" placeholder="Buscar por código">
                </div>
                <div class="col-md-3">
                    <select class="form-select search-input">
                        <option selected disabled>Tipo de propiedad</option>
                        <option>Casa</option>
                        <option>Apartamento</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <input type="number" class="form-control search-input" placeholder="Precio mínimo">
                </div>
                <div class="col-md-2">
                    <input type="number" class="form-control search-input" placeholder="Precio máximo">
                </div>
                <div class="col-md-2">
                    <input type="number" class="form-control search-input" placeholder="Habitaciones">
                </div>
                <div class="col-md-2">
                    <input type="number" class="form-control search-input" placeholder="Baños">
                </div>
            </div>
        </div>
    </div>

    <!-- Listado de propiedades -->
    <div class="row">
        @if (Model == null || Model.Count == 0)
        {
            <div class="col-12">
                <div class="alert alert-warning text-center">No hay propiedades publicadas.</div>
            </div>
        }
        else
        {
            @foreach (PropertyVm item in Model)
            {
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="card h-100 shadow-sm border-0">
                        <img class="card-img-top" src="@item.PropertyImageVms.Where(i=>i.Order==1).Select(i=>i.ImageUrl).FirstOrDefault()" alt="Imagen de propiedad">
                        <div class="card-body">
                            <h5 class="card-title">@item.PropertyTypeVm.Name <span class="badge bg-@((item.State == true) ? "success" : "secondary")">@(item.State ? "Disponible" : "Vendida")</span></h5>
                            <p class="card-text small">@item.PropertyTypeVm.Description</p>
                            <ul class="list-unstyled small">
                                <li><strong>Código:</strong> @item.Code</li>
                                <li><strong>Precio:</strong> RD$@item.Price</li>
                                <li><strong>Metros:</strong> @item.PropertySize m²</li>
                                <li><strong>Baños:</strong> @item.AmountOfBathroom</li>
                                <li><strong>Habitaciones:</strong> @item.AmountOfRoom</li>
                            </ul>
                        </div>
                        <div class="card-footer bg-white border-0 text-end">
                            <a asp-controller="Agent" asp-action="PropertyDeatails" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm">Ver detalles</a>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

<style>
    body {
        background: linear-gradient(to right, #e3f2fd, #fff);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .search-input {
        border-radius: 10px;
        padding: 0.6rem 1rem;
        border: 1px solid #D3D5D7;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .card {
        border-radius: 1rem;
        transition: all 0.3s ease;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);
        }

    .card-title {
        font-size: 1.2rem;
        font-weight: 600;
        color: #050517;
    }

    .badge-success {
        background-color: #28a745;
    }

    .badge-secondary {
        background-color: #6c757d;
    }
</style>


