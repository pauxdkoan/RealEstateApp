@using RealEstateApp.Core.Application.Enums
@using RealEstateApp.Core.Application.ViewModels.Property
@using RealEstateApp.Core.Application.Helpers
@using RealEstateApp.Core.Application.Dtos.Account


@inject IHttpContextAccessor httpContextAccesor
@model PropertyVm
@{
    ViewData["Title"] = "Detalles de Propiedad";
    var user = httpContextAccesor.HttpContext.Session.Get<AuthenticationResponse>("user");
}



<div class="container-fluid mt-4">
    <div class="row">
        <!-- Slider de imágenes -->
        <div class="col-md-8">
            <div id="propertyCarousel" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                    @if (Model.PropertyImageVms != null && Model.PropertyImageVms.Any())
                    {
                        @foreach(var i in Model.PropertyImageVms)
                        {
                            <div class="carousel-item active">
                                <img src="@i.ImageUrl" class="d-block w-100" alt="Imagen de propiedad" style="height: 500px; object-fit: cover;">
                            </div>
                        }
                    }
                    else
                    {
                        <div class="carousel-item active">
                            <img src="~/images/placeholder.jpg" class="d-block w-100" alt="Imagen no disponible" style="height: 500px; object-fit: cover;">
                        </div>
                    }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#propertyCarousel" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#propertyCarousel" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
        </div>

        <!-- Detalles de la propiedad -->
        <div class="col-md-4">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">@Model.Code - @Model.PropertyTypeVm.Name</h3>
                </div>
                <div class="card-body">
                    <h4 class="text-success">@Model.SalesTypeVm.Name: US$ @Model.Price.ToString("N0")</h4>

                    <div class="row mt-3">
                        <div class="col-6">
                            <p><i class="fas fa-bed me-2"></i> @Model.AmountOfRoom Habitaciones</p>
                            <p><i class="fas fa-bath me-2"></i> @Model.AmountOfBathroom Baños</p>
                        </div>
                        <div class="col-6">
                            <p><i class="fas fa-expand me-2"></i> @Model.PropertySize m²</p>
                        </div>
                    </div>

                    <hr>

                    <h5>Descripción</h5>
                    <p class="text-muted">@Model.Description</p>

                    @if (Model.PropertyImprovements != null && Model.PropertyImprovements.Any())
                    {
                        <h5 class="mt-3">Mejoras</h5>
                        <ul class="list-group">
                            @foreach (var improvement in Model.PropertyImprovements)
                            {
                                <li class="list-group-item">@improvement.Improvement.Name</li>
                            }
                        </ul>
                    }
                </div>
            </div>
        </div>
    </div>


    <!-- Sección específica para agentes -->

    <div class="row mt-4">
        <!-- Chat -->
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0"><i class="fas fa-comments me-2"></i>Clientes</h5>
                </div>
                <div class="card-body" style="height: 400px;">
                    <div class="row h-100">
                        <!-- Listado de clientes -->
                        <div class="col-4 border-end overflow-auto">
                            <h6>Clientes</h6>
                            <ul class="list-group">
                                @foreach (var c in Model.Chats)
                                {
                                    <li class="list-group-item @(c.ClientId == ViewBag.SelectedClientId ? "active" : "")">
                                        <a href="?clientId=@c.ClientId" class="text-decoration-none @(c.ClientId == user.Id ? "text-Dark" : "")">
                                            @c.Client.FirstName @c.Client.LastName
                                        </a>
                                    </li>
                                }
                            </ul>
                        </div>

                        <!-- Conversación -->
                        <div class="col-8 d-flex flex-column">
                            <div class="chat-container flex-grow-1 mb-3 overflow-auto" style="max-height: 320px;">
                                @{
                                    var selectedChat = Model.Chats.FirstOrDefault(c => c.ClientId.ToString() == Context.Request.Query["clientId"]);
                                }

                                @if (selectedChat != null && selectedChat.Messages != null)
                                {
                                    foreach (var message in selectedChat.Messages.OrderBy(m => m.DateTime))
                                    {
                                        <div class="message @(message.SenderId == user.Id ? "client-message" : "agent-message") mb-3">
                                            <div class="message-header small text-muted">
                                                @(message.SenderId == user.Id ? "Tú" : selectedChat.Client.FirstName) - @message.DateTime.ToString("dd/MM/yyyy HH:mm")
                                            </div>
                                            <div class="message-content p-3 rounded">
                                                @message.Content
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p class="text-muted">Selecciona un cliente para ver la conversación.</p>
                                }
                            </div>

                            @if (selectedChat != null)
                            {
                                <form asp-controller="Agent" asp-action="SendMessage" method="post">
                                    <input type="hidden" name="propertyId" value="@Model.Id" />
                                    <input type="hidden" name="chatId" value="@selectedChat.Id" />
                                    <input type="hidden" name="clientId" value="@selectedChat.ClientId"/>
                                    <div class="input-group">
                                        <input type="text" name="message" class="form-control" placeholder="Escribe tu mensaje..." required />
                                        <button type="submit" class="btn btn-primary"><i class="fas fa-paper-plane"></i></button>
                                    </div>
                                </form>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <!-- Ofertas de clientes -->
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0"><i class="fas fa-handshake me-2"></i>Ofertas de Clientes</h5>
                </div>
                <div class="card-body">
                    @if (Model.Offers != null && Model.Offers.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Cliente</th>
                                        <th>Fecha</th>
                                        <th>Monto</th>
                                        <th>Estado</th>
                                        <th>Acciones</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var offer in Model.Offers.OrderByDescending(o => o.Date))
                                    {
                                        <tr>
                                            <td>@offer.Cliente.FirstName @offer.Cliente.LastName</td>
                                            <td>@offer.Date.ToString("dd/MM/yyyy HH:mm")</td>
                                            <td>US$ @offer.Amount.ToString("N0")</td>
                                            <td>
                                                <span class="badge @GetStatusBadge(offer.State)">
                                                    @GetStatusText(offer.State)
                                                </span>

                                                </td>
                                                <td>
                                                    <form asp-controller="Agent" asp-action="UpdateOfferStatus" asp-route-propertyId="@Model.Id" method="post">
                                                        <input type="hidden" name="offerId" value="@offer.Id" />
                                                        <div class="input-group">
                                                            <select name="newStatus" class="form-select form-select-sm">
                                                                <option value="1">Pendiente</option>
                                                                <option value="2">Aceptada</option>
                                                                <option value="3">Rechazada</option>
                                                            </select>
                                                            <button type="submit" class="btn btn-sm btn-primary">
                                                                <i class="fas fa-save"></i>
                                                            </button>
                                                        </div>
                                                    </form>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <p class="text-muted">No hay ofertas registradas para esta propiedad</p>
                        }


                    </div>
                </div>
            </div>
        </div>

        <!-- Estadísticas rápidas -->
        <div class="row mt-4">
            <div class="col-md-4">
                <div class="card shadow">
                    <div class="card-body">
                        <h5><i class="fas fa-chart-line me-2"></i>Estadísticas</h5>
                        <ul class="list-group">
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Ofertas totales
                                <span class="badge bg-primary">@Model.Offers.Count</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Ofertas activas
                                <span class="badge bg-success">@Model.Offers.Count(o => o.State == "2")</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Ofertas rechazadas
                                <span class="badge bg-danger">@Model.Offers.Count(o => o.State == "3")</span>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>



    <script>
        // Inicializar carrusel
        $(document).ready(function(){
            $('#propertyCarousel').carousel();

            // Scroll automático al final del chat
            const chatContainer = document.querySelector('.chat-container');
            if(chatContainer) {
                chatContainer.scrollTop = chatContainer.scrollHeight;
            }
        });
    </script>
    
</div>

@functions {
    string GetStatusBadge(string status)
    {
        return status switch
        {
            "1" => "bg-warning",
            "2" => "bg-success",
            "3" => "bg-danger",
            _ => "bg-secondary"
        };
    }
        public string GetStatusText(string state)
        {
            return state switch
            {
                "1" => "Pendiente",
                "2" => "Aceptada",
                "3" => "Rechazada",
                _ => "Desconocido"
            };
        }
}