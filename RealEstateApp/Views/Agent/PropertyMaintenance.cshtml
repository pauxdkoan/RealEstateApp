@using RealEstateApp.Core.Application.ViewModels.Property
@using RealEstateApp.Core.Application.Helpers
@using RealEstateApp.Core.Application.Dtos.Account
@model List<PropertyVm>

@inject IHttpContextAccessor httpContextAccesor
@{
    ViewData["Title"] = "Home";
    var user =  httpContextAccesor.HttpContext.Session.Get<AuthenticationResponse>("user");
   
}



<div class="container py-5">
    <div class="row mb-4">
        <div class="col-md-12 text-end">
            <a asp-controller="Agent" asp-action="CreateProperty" class="btn btn-success px-4 py-2 shadow-sm rounded-pill">
                <i class="fa fa-plus me-2"></i> Registrar nueva propiedad
            </a>
        </div>
    </div>

    <div class="row">
        @if (Model == null || Model.Count == 0)
        {
            <div class="col-12">
                <div class="alert alert-info text-center">No hay propiedades registradas.</div>
            </div>
        }
        else if (Model.All(p => !p.State))
        {
            <div class="col-12">
                <div class="alert alert-warning text-center">No hay propiedades activas.</div>
            </div>
        }
        else
        {
            @foreach (PropertyVm item in Model)
            {
                @if (item.State)
                {
                    <div class="col-lg-4 col-md-6 mb-4">
                        <div class="card h-100 shadow-sm border-0">
                            <img class="card-img-top" src="@item.PropertyImageVms.Select(i => i.ImageUrl).FirstOrDefault()" alt="Imagen de propiedad">
                            <div class="card-body">
                                <h5 class="card-title">@item.PropertyTypeVm.Name <span class="badge bg-success">Disponible</span></h5>
                                <p class="card-text small">@item.PropertyTypeVm.Description</p>
                                <ul class="list-unstyled small">
                                    <li><strong>Código:</strong> @item.Code</li>
                                    <li><strong>Precio:</strong> RD$@item.Price</li>
                                    <li><strong>Metros:</strong> @item.PropertySize m²</li>
                                    <li><strong>Baños:</strong> @item.AmountOfBathroom</li>
                                    <li><strong>Habitaciones:</strong> @item.AmountOfRoom</li>
                                </ul>
                            </div>
                            <div class="card-footer bg-white border-0 d-flex justify-content-between">
                                <a asp-controller="Agent" asp-action="EditProperty" asp-route-id="@item.Id" class="btn btn-outline-info btn-sm">
                                    <i class="fa fa-edit"></i> Editar
                                </a>
                                <form class="delete-form" method="post" asp-controller="Agent" asp-action="DeleteProperty" asp-route-propertyId="@item.Id">
                                    <button type="button" class="btn btn-outline-danger btn-sm delete-btn">
                                        <i class="fa fa-trash"></i> Eliminar
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            }
        }
    </div>
</div>

@section Scripts {
    <script>
        document.querySelectorAll('.delete-btn').forEach(btn => {
            btn.addEventListener('click', function(e) {
                e.preventDefault();
                const form = this.closest('form');

                Swal.fire({
                    title: '¿Eliminar propiedad?',
                    text: "¡Esta acción no se puede deshacer!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Sí, eliminar!',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        form.submit();
                    }
                });
            });
        });
    </script>
}

<style>
    body {
        background: linear-gradient(to right, #e3f2fd, #fff);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .card {
        border-radius: 1rem;
        transition: all 0.3s ease;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.1);
        }

    .card-title {
        font-size: 1.2rem;
        font-weight: 600;
        color: #050517;
    }
</style>
